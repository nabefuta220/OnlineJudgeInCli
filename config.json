{
    "query": {
        "abc218/a": "https://atcoder.jp/contests/abc218/tasks/abc218_a",
        "abc218/b": "https://atcoder.jp/contests/abc218/tasks/abc218_b",
        "abc218/c": "https://atcoder.jp/contests/abc218/tasks/abc218_c",
        "abc218/d": "https://atcoder.jp/contests/abc218/tasks/abc218_d",
        "abc218/e": "https://atcoder.jp/contests/abc218/tasks/abc218_e",
        "abc218/f": "https://atcoder.jp/contests/abc218/tasks/abc218_f",
        "abc218/g": "https://atcoder.jp/contests/abc218/tasks/abc218_g",
        "abc218/h": "https://atcoder.jp/contests/abc218/tasks/abc218_h"
    },
    "user_info": {
        "username": "nabefuta",
        "password": "At-Nabe_440!"
    },
    "preset": {
        "Main.cpp": [
            "#include <bits/stdc++.h>",
            "using ll = long long;",
            "using namespace std;",
            "#define rep(i, n) for (int i = 0, i##_len = (int)(n); i < i##_len; i++)",
            "#define reps(i, n) for (int i = 1, i##_len = (int)(n); i <= i##_len; i++)",
            "#define rrep(i, n) for (int i = ((int)(n)-1); i >= 0; i--)",
            "#define rreps(i, n) for (int i = ((int)(n)); i > 0; i--)",
            "#define repi(i, x) \\",
            "\tfor (auto i = (x).begin(), i##_fin = (x).end(); i != i##_fin; i++)",
            "#define all(x) (x).begin(), (x).end()",
            "#define F first",
            "#define S second",
            "#define mp make_pair",
            "#define mt make_tuple",
            "#define pb push_back",
            "#define eb emplace_back",
            "typedef vector<int> Vi;",
            "typedef vector<Vi> VVi;",
            "typedef pair<int, int> Pi;",
            "typedef vector<Pi> VPi;",
            "typedef vector<long long> V;",
            "typedef vector<V> VV;",
            "typedef pair<long long, long long> P;",
            "typedef vector<P> VP;",
            "template <class T>",
            "inline bool chmax(T& a, T b) {",
            "\tif (a < b) {",
            "\t\ta = b;",
            "\t\treturn 1;",
            "\t}",
            "\treturn 0;",
            "}",
            "template <class T>",
            "inline bool chmin(T& a, T b) {",
            "\tif (a > b) {",
            "\t\ta = b;",
            "\t\treturn 1;",
            "\t}",
            "\treturn 0;",
            "}",
            "template <class T, class U>",
            "ostream& operator<<(ostream& os, const pair<T, U>& p) {",
            "\tos << \"(\" << p.first << \" \" << p.second << \")\";",
            "\treturn os;",
            "}",
            "template <class T>",
            "ostream& operator<<(ostream& os, const vector<T>& v) {",
            "#ifdef LOCAL",
            "\tos << \"{\";",
            "#endif",
            "\trep(i, v.size()) {",
            "\t\tif (i) os << \" \";",
            "\t\tos << v[i];",
            "\t}",
            "#ifdef LOCAL",
            "\tos << \"}\";",
            "#endif",
            "\treturn os;",
            "}",
            "template <class T, class U>",
            "istream& operator>>(istream& is, pair<T, U>& p) {",
            "\tis >> p.first >> p.second;",
            "\treturn is;",
            "}",
            "template <class T>",
            "istream& operator>>(istream& is, vector<T>& v) {",
            "\trep(i, v.size()) { is >> v[i]; }",
            "\treturn is;",
            "}",
            "const long long INFLL = 1LL << 60;",
            "const int INF         = 1 << 30;",
            "const double PI       = acos(-1);",
            "#ifdef LOCAL",
            "#define dbg(x) cerr << #x << \": \" << (x) << '\\n'",
            "#define say(x) cerr << (x) << '\\n'",
            "#else",
            "#define dbg(x)",
            "#define say(x)",
            "#endif",
            "void init_main() {",
            "\tcin.tie(nullptr);",
            "\tios::sync_with_stdio(false);",
            "}",
            "string solve(bool a) { return ((a) ? \"Yes\" : \"No\"); }",
            "int main() {",
            "\tinit_main();",
            "\tint n;",
            "\tint ans = 0;",
            "\tcin >> n;",
            "\tans = n;",
            "\tcout << ans << endl;",
            "}"
        ],
        "makefile": [
            "URL := test",
            "INCDIR = -I /home/nabefuta/atcoder/ac-library/",
            "HOME= /home/nabefuta/atcoder",
            "TARGET = Main",
            "CXX= g++",
            "OJ_TESTFLAG :=",
            "CXXFLAG = -std=gnu++17 -Wall -Wextra -O2",
            "test:$(TARGET).out",
            "\t./$<",
            "%.out:%.cpp",
            "\t$(CXX) $(CXXFLAG) -DLOCAL $(INCDIR) -o $@ $<",
            "cheak:$(TARGET).cpp",
            "\t$(CXX) $(CXXFLAG) -DONLINE_JUDGE  $(INCDIR) -o a.out $< && oj t -N -S $(OJ_TESTFLAG)",
            "sub:$(TARGET).cpp",
            "\toj s $< --no-open",
            "init:",
            "\toj d $(URL)",
            "track: $(HOME)/tracker.py",
            "\tpython $< $(URL) $(HOME)/config.json ",
            "subntrack: $(TARGET).cpp",
            "\toj s $< --no-open -y | python $(HOME)/sub_n_track.py $(HOME)/config.json",
            "expend:$(TARGET).cpp",
            "\tpython $(HOME)/ac-library/expander.py $< --lib $(HOME)/ac-library/"
        ],
        "tools": [
            "#!/usr/local/bin/python3",
            "# -*- coding: utf-8 -*-",
            "import sys",
            "import subprocess",
            "import argparse",
            "cxxflag = '-std=gnu++17 -Wall -Wextra -O2'",
            "oj_testflag = ''",
            "\nhome = '/home/nabefuta/atcoder'",
            "\nsys.path.append(home)",
            "\nif '/home/nabefuta/atcoder' in sys.path:",
            "\timport tracker",
            "\n\ndef input_arg():",
            "\t\"\"\"",
            "\tコマンドラインからの入力を受け付ける",
            "\t\"\"\"",
            "\tparse = argparse.ArgumentParser('tools')",
            "\tparse.add_argument('mode', choices=['test', 'cheak', 'sub', 'track', 'init', 'subntrack', 'expand'])",
            "\tparse.add_argument('-u', '--URL', default='test',help='問題URL,もしくは提出結果のURL')",
            "\tparse.add_argument('--incdir', default='-I /home/nabefuta/atcoder/ac-library', help='at-llibaryのパス')",
            "\n\tparse.add_argument('--target', default='Main', help='ソースファイル')",
            "\tparse.add_argument('--cxx', default='g++', help='c++のコンパイラ', )",
            "\n\targs = parse.parse_args()",
            "\n\tdict = {'mode': args.mode, 'url': args.URL, 'incdir': args.incdir, 'target': args.target,'cxx': args.cxx, 'oj_testflag': oj_testflag, 'cxxflag': cxxflag}",
            "\n\treturn dict",
            "\n\ndef bulid(cxx, cxxflag,  incdir, target, macro=''):",
            "\t\"\"\"",
            "\tコンパイルする",
            "\t\"\"\"",
            "\tcommand = '%s %s %s %s -o %s %s' % (cxx,cxxflag, macro, incdir, target+'.out', target+'.cpp')",
            "\tres = subprocess.run(shell=True, args=command)",
            "\tif res.returncode != 0:",
            "\t\texit()",
            "\n\ndef exert(target):",
            "\t\"\"\"",
            "\t実行する",
            "\t\"\"\"",
            "\tcommand = './%s.out' % (target)",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef cheak(oj_testflag, target):",
            "\t\"\"\"",
            "\tテストケースを実行する",
            "\t\"\"\"",
            "\tcommand = 'oj t -N -S %s -c %s' % (oj_testflag, './' + target)",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef submitte(target):",
            "\t\"\"\"",
            "\t提出する",
            "\t\"\"\"",
            "\tcommand = 'oj s %s --no-open' % (target)",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef init(url):",
            "\t\"\"\"",
            "\tテストケースを取得する",
            "\t\"\"\"",
            "\tcommand = 'oj d %s' % (url)",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef expand(target):",
            "\t\"\"\"",
            "\tac-libaryを展開する",
            "\t\"\"\"",
            "\tcommand = 'python %s %s --lib %s' % (home +'/ac-library/expander.py', target, home+'/ac-library/')",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef submittdNtrack(target):",
            "\t\"\"\"",
            "\t提出して、結果を見る",
            "\t\"\"\"",
            "\tcommand = 'oj s %s --no-open -y | python %s %s' % (target, home+'/sub_n_track.py', home+'/config.json')",
            "\tsubprocess.run(shell=True, args=command)",
            "\n\ndef tools(arg: dict):",
            "\t\"\"\"",
            "\tコマンドを実行する",
            "\t\"\"\"",
            "\tmode = arg['mode']",
            "\tif mode == 'test':",
            "\t\tbulid(arg['cxx'], arg['cxxflag'],arg['incdir'], arg['target'], '-DLOCAL')",
            "\t\texert(arg['target'])",
            "\telif mode == 'cheak':",
            "\t\tbulid(arg['cxx'], arg['cxxflag'], arg['incdir'], arg['target'], '-DONLINE_JUDGE')",
            "\t\tcheak(arg['oj_testflag'], arg['target']+'.out')",
            "\telif mode == 'sub':",
            "\t\tsubmitte(arg['target']+'.cpp')",
            "\telif mode == 'init':",
            "\t\tinit(arg['url'])",
            "\telif mode == 'track':",
            "\t\tprint(tracker.track(arg['url'], home+'/config.json', 'tmp.html'))",
            "\telif mode == 'subntrack':",
            "\t\tsubmittdNtrack(arg['target']+'.cpp')",
            "\telif mode == 'expand':",
            "\t\texpand(arg['target']+'.cpp')",
            "\n\nif __name__ == '__main__':",
            "\targ = input_arg()",
            "\ttools(arg)"
        ]
    }
}